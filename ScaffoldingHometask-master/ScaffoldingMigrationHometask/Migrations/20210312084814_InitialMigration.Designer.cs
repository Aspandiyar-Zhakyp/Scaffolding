// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScaffoldingMigrationHometask;

namespace ScaffoldingMigrationHometask.Migrations
{
    [DbContext(typeof(MigrationHometaskContext))]
    [Migration("20210312084814_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ScaffoldingMigrationHometask.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("authorId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex(new[] { "Name" }, "UQ__Articles__72E12F1B95115599")
                        .IsUnique();

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("ScaffoldingMigrationHometask.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__Authors__72E12F1B976B811C")
                        .IsUnique();

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("ScaffoldingMigrationHometask.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("ArticleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("articleId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex(new[] { "Name" }, "UQ__Categori__72E12F1B41356397")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ScaffoldingMigrationHometask.Article", b =>
                {
                    b.HasOne("ScaffoldingMigrationHometask.Author", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK_ArticlesAuthors_authorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ScaffoldingMigrationHometask.Category", b =>
                {
                    b.HasOne("ScaffoldingMigrationHometask.Article", "Article")
                        .WithMany("Categories")
                        .HasForeignKey("ArticleId")
                        .HasConstraintName("FK_CategoriesArticles_articleId");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("ScaffoldingMigrationHometask.Article", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("ScaffoldingMigrationHometask.Author", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
